<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-03-07T10:47:41Z" name="Suite" finished-at="2021-03-07T10:48:01Z" duration-ms="19773">
    <groups>
    </groups>
    <test started-at="2021-03-07T10:47:41Z" name="Test" finished-at="2021-03-07T10:48:01Z" duration-ms="19773">
      <class name="apitests.POSTTest">
        <test-method is-config="true" signature="param()[pri:0, instance:apitests.POSTTest@5d534f5d]" started-at="2021-03-07T16:17:56Z" name="param" finished-at="2021-03-07T16:17:56Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- param -->
        <test-method signature="testPOSTForCreate()[pri:0, instance:apitests.POSTTest@5d534f5d]" started-at="2021-03-07T16:17:56Z" name="testPOSTForCreate" finished-at="2021-03-07T16:17:58Z" duration-ms="1125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPOSTForCreate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:apitests.POSTTest@5d534f5d]" started-at="2021-03-07T16:17:58Z" name="getResult" finished-at="2021-03-07T16:17:58Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPOSTForCreate status=SUCCESS method=POSTTest.testPOSTForCreate()[pri:0, instance:apitests.POSTTest@5d534f5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="param()[pri:0, instance:apitests.POSTTest@5d534f5d]" started-at="2021-03-07T16:17:58Z" name="param" finished-at="2021-03-07T16:17:58Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- param -->
        <test-method signature="testPOSTForRegistration()[pri:0, instance:apitests.POSTTest@5d534f5d]" started-at="2021-03-07T16:17:58Z" name="testPOSTForRegistration" finished-at="2021-03-07T16:17:59Z" duration-ms="971" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<200> but was:<400>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<200> but was:<400>
	at org.junit.Assert.fail(Assert.java:93)
	at org.junit.Assert.failNotEquals(Assert.java:647)
	at org.junit.Assert.assertEquals(Assert.java:128)
	at org.junit.Assert.assertEquals(Assert.java:472)
	at org.junit.Assert.assertEquals(Assert.java:456)
	at apitests.POSTTest.testPOSTForRegistration(POSTTest.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPOSTForRegistration -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:apitests.POSTTest@5d534f5d]" started-at="2021-03-07T16:17:59Z" name="getResult" finished-at="2021-03-07T16:17:59Z" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPOSTForRegistration status=FAILURE method=POSTTest.testPOSTForRegistration()[pri:0, instance:apitests.POSTTest@5d534f5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- apitests.POSTTest -->
      <class name="apitests.DELETETest">
        <test-method is-config="true" signature="param()[pri:0, instance:apitests.DELETETest@70e9c95d]" started-at="2021-03-07T16:18:00Z" name="param" finished-at="2021-03-07T16:18:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- param -->
        <test-method signature="testDelete()[pri:0, instance:apitests.DELETETest@70e9c95d]" started-at="2021-03-07T16:18:00Z" name="testDelete" finished-at="2021-03-07T16:18:01Z" duration-ms="943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:apitests.DELETETest@70e9c95d]" started-at="2021-03-07T16:18:01Z" name="getResult" finished-at="2021-03-07T16:18:01Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDelete status=SUCCESS method=DELETETest.testDelete()[pri:0, instance:apitests.DELETETest@70e9c95d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- apitests.DELETETest -->
      <class name="apitests.PUTTest">
        <test-method is-config="true" signature="param()[pri:0, instance:apitests.PUTTest@2e3967ea]" started-at="2021-03-07T16:17:59Z" name="param" finished-at="2021-03-07T16:17:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- param -->
        <test-method signature="testPutForUpdate()[pri:0, instance:apitests.PUTTest@2e3967ea]" started-at="2021-03-07T16:17:59Z" name="testPutForUpdate" finished-at="2021-03-07T16:18:00Z" duration-ms="945" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutForUpdate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:apitests.PUTTest@2e3967ea]" started-at="2021-03-07T16:18:00Z" name="getResult" finished-at="2021-03-07T16:18:00Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPutForUpdate status=SUCCESS method=PUTTest.testPutForUpdate()[pri:0, instance:apitests.PUTTest@2e3967ea] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- apitests.PUTTest -->
      <class name="apitests.GETTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:apitests.GETTest@576d5deb]" started-at="2021-03-07T16:17:30Z" name="setUp" finished-at="2021-03-07T16:17:41Z" duration-ms="10577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="param()[pri:0, instance:apitests.GETTest@576d5deb]" started-at="2021-03-07T16:17:41Z" name="param" finished-at="2021-03-07T16:17:45Z" duration-ms="4362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- param -->
        <test-method signature="GetListOfUsers()[pri:0, instance:apitests.GETTest@576d5deb]" started-at="2021-03-07T16:17:45Z" name="GetListOfUsers" finished-at="2021-03-07T16:17:56Z" duration-ms="10497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetListOfUsers -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:apitests.GETTest@576d5deb]" started-at="2021-03-07T16:17:56Z" name="getResult" finished-at="2021-03-07T16:17:56Z" duration-ms="80" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetListOfUsers status=SUCCESS method=GETTest.GetListOfUsers()[pri:0, instance:apitests.GETTest@576d5deb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="param()[pri:0, instance:apitests.GETTest@576d5deb]" started-at="2021-03-07T16:17:56Z" name="param" finished-at="2021-03-07T16:17:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- param -->
        <test-method signature="GetSingleUser()[pri:0, instance:apitests.GETTest@576d5deb]" started-at="2021-03-07T16:17:56Z" name="GetSingleUser" finished-at="2021-03-07T16:17:56Z" duration-ms="645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSingleUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:apitests.GETTest@576d5deb]" started-at="2021-03-07T16:17:56Z" name="getResult" finished-at="2021-03-07T16:17:56Z" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetSingleUser status=SUCCESS method=GETTest.GetSingleUser()[pri:0, instance:apitests.GETTest@576d5deb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:apitests.GETTest@576d5deb]" started-at="2021-03-07T16:18:01Z" name="tearDown" finished-at="2021-03-07T16:18:03Z" duration-ms="2191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- apitests.GETTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
